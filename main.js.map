{"version":3,"sources":["./src/app/components/group/group/group.component.ts","./src/app/components/group/group/group.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/card/services/email-service.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/card/model/email.ts","./src/app/app.module.ts","./src/app/components/card/card-list/card-list.component.ts","./src/app/components/card/card-list/card-list.component.html","./src/app/components/card/create-card/create-card.component.ts","./src/app/components/card/create-card/create-card.component.html","./src/app/components/login/auth.service.ts","./src/app/components/card/services/card-service.service.ts","./src/app/app-routing.module.ts","./src/app/components/landing-page/landing-page.component.ts","./src/app/components/landing-page/landing-page.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-group',\n  templateUrl: './group.component.html',\n  styleUrls: ['./group.component.css']\n})\nexport class GroupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>group works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  navLinks: any[];\n  activeLinkIndex = -1;\n  constructor(private router: Router) {\n    this.navLinks = [\n      {\n        label: 'Card catalog',\n        link: './cards',\n        index: 0\n      }, {\n        label: 'Group catalog',\n        link: './group',\n        index: 1\n      },\n    ];\n  }\n\n  ngOnInit(): void {\n    this.router.events.subscribe((res) => {\n      this.activeLinkIndex = this.navLinks.indexOf(this.navLinks.find(tab => tab.link === '.' + this.router.url));\n    });\n  }\n\n}\n","\n<nav mat-tab-nav-bar>\n  <a mat-tab-link\n     *ngFor=\"let link of navLinks\"\n     [routerLink]=\"link.link\"\n     routerLinkActive #rla=\"routerLinkActive\"\n     [active]=\"rla.isActive\">{{link.label}}\n  </a>\n</nav>\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Card} from '../model/card';\nimport {Email} from '../model/email';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailServiceService {\n\n  private postemailUrl: string;\n  constructor(private http: HttpClient) {\n    this.postemailUrl = 'https://digital-org.herokuapp.com/email-validate';\n  }\n\n  public save(email: Email){\n    return this.http.post<Card>(this.postemailUrl, email);\n  }\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'digital-org-ui';\n}\n","<div>\n <!-- <section>\n    <div class=\"example-button-row\">\n      <button mat-button color=\"primary\" routerLink=\"/home\">Home</button>\n      <button mat-button color=\"primary\" routerLink=\"/cards\">List Cards</button>\n      <button mat-button color=\"primary\" routerLink=\"/addCard\">Add Card</button>\n    </div>\n\n  </section>-->\n  <router-outlet></router-outlet>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private authService: AuthService) { }\n\n  username: string;\n  password : string;\n  errorMessage = 'Invalid Credentials';\n  successMessage: string;\n  invalidLogin = false;\n  loginSuccess = false;\n  hide = true;\n\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  ngOnInit(): void {\n  }\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.email.hasError('email') ? 'Not a valid email.ts' : '';\n  }\n\n  // tslint:disable-next-line:typedef\n  handleLogin() {\n    this.authService.authenticationService(this.username, this.password).subscribe((result)=> {\n      this.invalidLogin = false;\n      this.loginSuccess = true;\n      this.successMessage = 'Login Successful.';\n      this.router.navigate(['/cards']);\n    }, () => {\n      this.invalidLogin = true;\n      this.loginSuccess = false;\n    });\n  }\n\n}\n","\n      <div class=\"main-div\">\n        <mat-card class=\"example-card\">\n          <mat-card-header>\n            <div mat-card-avatar class=\"example-header-image\"></div>\n            <mat-card-title>Login form</mat-card-title>\n            <mat-card-subtitle>Fill below details to login</mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-content>\n            <div class = \"formfill\">\n              <div class=\"example-container\">\n                <p>\n                  <mat-form-field appearance=\"fill\">\n                    <mat-label>Enter your email</mat-label>\n                    <input matInput placeholder=\"pat@example.com\" [formControl]=\"email\" required>\n                    <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n                  </mat-form-field>\n                </p>\n                <p>\n                  <mat-form-field appearance=\"fill\">\n                    <mat-label>Enter your password</mat-label>\n                    <input matInput [type]=\"hide ? 'password' : 'text'\">\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                  </mat-form-field>\n                </p>\n              </div>\n              <mat-grid-list cols=\"3\" rowHeight=\"2:1\">\n                <mat-grid-tile><button mat-raised-button color=\"primary\" type=\"submit\" (click)=handleLogin() class=\"btn btn-success\" id=\"login\">Login</button></mat-grid-tile>\n                <mat-grid-tile><button mat-raised-button color=\"primary\" type=\"submit\" class=\"btn btn-success\" id=\"signup\">Signup</button></mat-grid-tile>\n                <mat-grid-tile><button mat-raised-button color=\"primary\" type=\"submit\"  class=\"btn btn-success\" id=\"github\">Github-login</button></mat-grid-tile>\n              </mat-grid-list>\n              <!--<section>\n                <div class=\"example-button-row\">\n                  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=handleLogin() class=\"btn btn-success\" id=\"login\">Login</button>\n                  <button mat-raised-button color=\"primary\" type=\"submit\" class=\"btn btn-success\" id=\"signup\">Signup</button>\n                  <button mat-raised-button color=\"primary\" type=\"submit\"  class=\"btn btn-success\" id=\"github\">Github-login</button>\n                </div>\n              </section>-->\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n","export class Email{\n  email: string;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {RouterModule} from '@angular/router';\nimport { CardListComponent } from './components/card/card-list/card-list.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {AppRoutingModule} from './app-routing.module';\nimport {CardServiceService} from './components/card/services/card-service.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CreateCardComponent } from './components/card/create-card/create-card.component';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatNativeDateModule, MatOptionModule} from '@angular/material/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport { HomeComponent } from './components/home/home.component';\nimport {FormControl, Validators} from '@angular/forms';\nimport { LoginComponent } from './components/login/login.component';\nimport {AuthService} from './components/login/auth.service';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { GroupComponent } from './components/group/group/group.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardListComponent,\n    CreateCardComponent,\n    HomeComponent,\n    LoginComponent,\n    LandingPageComponent,\n    GroupComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot([]),\n    MatCardModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatGridListModule,\n    FormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatOptionModule,\n    MatSelectModule,\n    ClipboardModule,\n    FontAwesomeModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTabsModule,\n  ],\n  providers: [CardServiceService , AuthService, MatDatepickerModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(library: FaIconLibrary) {\n    library.addIconPacks(fas);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CardServiceService} from '../services/card-service.service';\nimport { Card } from '../model/card';\n\n@Component({\n  selector: 'app-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.css']\n})\nexport class CardListComponent implements OnInit {\n\n  cards: Card[];\n  constructor(private cardService: CardServiceService) { }\n\n  ngOnInit(){\n    this.cardService.findAll().subscribe(data => {\n      this.cards = data;\n    });\n  }\n}\n","<mat-grid-list cols=\"4\" rowHeight=\"1000px\">\n  <mat-grid-tile\n    *ngFor=\"let card of cards\">\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n        <div mat-card-avatar class=\"example-header-image\" [ngStyle]=\"{'background-image':'url(src/assets/images/blue.jpg)}'}\"></div>\n        <mat-grid-list cols=\"4\" rowHeight=\"100px\" class=\"header\">\n          <mat-grid-tile [colspan]=2><button mat-button class=\"title\" >{{card.title}}</button></mat-grid-tile>\n          <mat-grid-tile [colspan]=1><button mat-button color=\"primary\" class=\"edit\"><fa-icon [icon]=\"['fas','edit']\"></fa-icon></button></mat-grid-tile>\n          <mat-grid-tile [colspan]=1><button mat-button color=\"accent\" class=\"trash\"><fa-icon [icon]=\"['fas','trash']\"></fa-icon></button></mat-grid-tile>\n        </mat-grid-list>\n\n      </mat-card-header>\n      <!--<img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">-->\n      <mat-card-content>\n          {{card.description}}\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-button><fa-icon [icon]=\"['fas','share-alt']\"></fa-icon>{{card.short_url}}</button>\n        <button mat-button><fa-icon [icon]=\"['fas','comment-alt']\"></fa-icon></button>\n      </mat-card-actions>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { Component, OnInit } from '@angular/core';\nimport {Card} from '../model/card';\nimport {CardServiceService} from '../services/card-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-create-card',\n  templateUrl: './create-card.component.html',\n  styleUrls: ['./create-card.component.css']\n})\nexport class CreateCardComponent  {\n  uploadForm: FormGroup;\n  selectedFile: File;\n  message: string;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private cardService: CardServiceService,\n    private httpClient: HttpClient,\n    private formBuilder: FormBuilder\n  ) {\n    this.buildForm();\n  }\n\n\n  // tslint:disable-next-line:typedef\n  buildForm(){\n    this.uploadForm = this.formBuilder.group({\n      title: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      description: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      original_url: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      expire_date: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      active: [''],\n      updated_by: ['', [ Validators.minLength(2), Validators.maxLength(30)]],\n      team: ['', [ Validators.minLength(2), Validators.maxLength(30)]],\n      tribe: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n    });\n  }\n  // tslint:disable-next-line:typedef\n  onFileSelect(event) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  // tslint:disable-next-line:typedef\n  onSubmit() {\n    console.log(this.uploadForm.value);\n    this.cardService.save(this.uploadForm.value).subscribe(result => this.gotoCardList());\n    this.onUpload();\n\n  }\n  onUpload(){\n    const uploadImageData = new FormData();\n    uploadImageData.append('file', this.selectedFile, this.selectedFile.name);\n    this.httpClient.post('https://digital-org.herokuapp.com/card/upload', uploadImageData, { observe: 'response' })\n      .subscribe((response) =>\n      {if (response.status === 200){\n        this.message = 'Image upload success';\n      }\n      else{\n        this.message = 'Image upload not succesful';\n      }\n      });\n\n  }\n\n  // tslint:disable-next-line:typedef\n  gotoCardList() {\n    this.router.navigate(['/cards']);\n  }\n}\n","<div class=\"main-div\">\n<mat-card class=\"example-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Card Form</mat-card-title>\n    <mat-card-subtitle>Fill below details to create a card</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <div class = \"formfill\">\n      <form [formGroup] = \"uploadForm\" (ngSubmit)=\"onSubmit()\" #userForm=\"ngForm\">\n        <p>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Title</mat-label>\n            <input matInput placeholder=\"title \"formControlName=\"title\">\n          </mat-form-field>\n        <p>\n          <mat-form-field appearance=\"outline\" class=\"example-full-width\">\n            <mat-label >Description</mat-label>\n            <textarea matInput placeholder=\"Placeholder\" formGroupName =\"description\" #message maxlength=\"256\"></textarea>\n            <mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\n          </mat-form-field>\n        </p>\n        <p>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Original_url</mat-label>\n            <input matInput placeholder=\"Placeholder\" formControlName=\"original_url\">\n          </mat-form-field>\n        </p>\n        <p>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Active</mat-label>\n            <input matInput placeholder=\"Placeholder\" formControlName=\"active\">\n          </mat-form-field>\n        </p>\n        <p>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Expire_date</mat-label>\n            <input matInput [matDatepicker]=\"expiry_picker\" formControlName=\"expire_date\">\n            <mat-datepicker-toggle matSuffix [for]=\"expiry_picker\"></mat-datepicker-toggle>\n            <mat-datepicker #expiry_picker></mat-datepicker>\n          </mat-form-field>\n        </p>\n        <p>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Updated_by</mat-label>\n            <input matInput placeholder=\"Placeholder\" formControlName=\"updated_by\">\n          </mat-form-field>\n        </p>\n        <p>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Team</mat-label>\n            <input  matInput placeholder=\"Placeholder\" formControlName=\"team\">\n          </mat-form-field>\n        </p>\n        <p>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Tribe</mat-label>\n            <input matInput placeholder=\"Placeholder\" formControlName=\"tribe\">\n          </mat-form-field>\n        </p>\n        <p>\n          <button mat-raised-button color=\"primary\"><input type=\"file\"  (change)=\"onFileSelect($event)\" ></button>\n        </p>\n        <button mat-raised-button color=\"primary\" type=\"submit\" >Submit</button>\n      </form>\n    </div>\n  </mat-card-content>\n</mat-card>\n</div>\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser';\n\n  // tslint:disable-next-line:ban-types\n  public username: String;\n  // tslint:disable-next-line:ban-types\n  public password: String;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  // tslint:disable-next-line:typedef\n  authenticationService(username: String, password: String) {\n    return this.http.get(`http://localhost:8080/basicauth`,\n      {headers: {authorization: this.createBasicAuthToken(username, password)}}).pipe(map((res) => {\n      this.username = username;\n      this.password = password;\n      this.registerSuccessfulLogin(username, password);\n    }));\n  }\n\n  // tslint:disable-next-line:typedef\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password);\n  }\n\n  // tslint:disable-next-line:typedef\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, username);\n  }\n\n  // tslint:disable-next-line:typedef\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.username = null;\n    this.password = null;\n  }\n\n  // tslint:disable-next-line:typedef\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    if (user === null) return false;\n    return true;\n  }\n\n  // tslint:disable-next-line:typedef\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    if (user === null) return '';\n    return user;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Card } from '../model/card';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardServiceService {\n  private getcardsUrl: string;\n  private postcardsUrl: string;\n  constructor(private http: HttpClient) {\n    this.getcardsUrl = 'https://digital-org.herokuapp.com/card/all/';\n    this.postcardsUrl = 'https://digital-org.herokuapp.com/card/';\n  }\n\n  public findAll(): Observable<Card[]>{\n    return this.http.get<Card[]>(this.getcardsUrl);\n  }\n\n  public save(card: Card){\n    return this.http.post<Card>(this.postcardsUrl, card);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {CardListComponent} from './components/card/card-list/card-list.component';\nimport {CreateCardComponent} from './components/card/create-card/create-card.component';\nimport {HomeComponent} from './components/home/home.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {LandingPageComponent} from './components/landing-page/landing-page.component';\nimport {GroupComponent} from './components/group/group/group.component';\n\nconst routes: Routes = [\n  { path: 'cards', component: CardListComponent },\n  { path: 'addCard', component: CreateCardComponent},\n  { path: 'land' , component: LandingPageComponent},\n  {path: '', redirectTo: 'land', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'logout', component: LoginComponent},\n  { path: 'home',\n    component: HomeComponent,\n    children: [\n      { path: '', redirectTo: 'cards', pathMatch: 'full'},\n      { path: 'cards', component: CardListComponent},\n      { path: 'group', component: GroupComponent}\n    ]\n  },\n  ];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {EmailServiceService} from '../card/services/email-service.service';\nimport {Email} from '../card/model/email';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n  emailid: Email;\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private emailservice: EmailServiceService) {\n    this.emailid = new Email();\n  }\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n  onSubmit(){\n    this.gotoHomePage();\n    /*this.emailservice.save(this.emailid).subscribe(result => this.gotoHomePage());*/\n  }\n  // tslint:disable-next-line:typedef\n  gotoHomePage(){\n    this.router.navigate(['/home']);\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n<body>\n<header>Thanks for visiting</header>\n<h1>Digital Wholesale Banking</h1>\n<div class=\"form-component\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"example-container\">\n      <mat-form-field appearance=\"fill\" class=\"input-field\">\n        <mat-label>Enter your email</mat-label>\n        <input matInput type=\"email\" ngModel name=\"email\" required email>\n        <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n      </mat-form-field>\n      <button mat-raised-button [disabled]=\"!f.valid\" class=\"button-field\"><fa-icon [icon]=\"['fas','arrow-circle-right']\"></fa-icon></button>\n    </div>\n  </form>\n</div>\n\n</body>\n\n\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}